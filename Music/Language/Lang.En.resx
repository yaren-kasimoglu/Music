<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Albums" xml:space="preserve">
    <value>Albums</value>
  </data>
  <data name="Artists" xml:space="preserve">
    <value>Artists</value>
  </data>
  <data name="btnAbout" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="btnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="btnClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="btnDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="btnLanguge" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="btnMyMusic" xml:space="preserve">
    <value>My music</value>
  </data>
  <data name="btnNewPlaylist" xml:space="preserve">
    <value>Create playlist</value>
  </data>
  <data name="btnNewPlaylist1" xml:space="preserve">
    <value>New playlist</value>
  </data>
  <data name="btnNowPlaying" xml:space="preserve">
    <value>Now playing</value>
  </data>
  <data name="btnPlayAll" xml:space="preserve">
    <value>Play all</value>
  </data>
  <data name="btnPlayList" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="btnRecentPlays" xml:space="preserve">
    <value>Recent plays</value>
  </data>
  <data name="btnRename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="btnRenamePlaylist" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="btnSetting" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="btnShuffleAllAlbums" xml:space="preserve">
    <value>Shuffle all</value>
  </data>
  <data name="btnSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="label1" xml:space="preserve">
    <value>Song title      :</value>
  </data>
  <data name="label1_Add" xml:space="preserve">
    <value>Right now, we're watching these folders:</value>
  </data>
  <data name="label2" xml:space="preserve">
    <value>Song artist    :</value>
  </data>
  <data name="label3" xml:space="preserve">
    <value>Album title   :</value>
  </data>
  <data name="label4" xml:space="preserve">
    <value>Album artist :</value>
  </data>
  <data name="label5" xml:space="preserve">
    <value>Genre           :</value>
  </data>
  <data name="label6" xml:space="preserve">
    <value>Length          :</value>
  </data>
  <data name="label7" xml:space="preserve">
    <value>Year              :</value>
  </data>
  <data name="label8" xml:space="preserve">
    <value>Copyright    :</value>
  </data>
  <data name="label9" xml:space="preserve">
    <value>File location:</value>
  </data>
  <data name="labelSort" xml:space="preserve">
    <value>Sort by</value>
  </data>
  <data name="labelTitle" xml:space="preserve">
    <value>My music</value>
  </data>
  <data name="label_About" xml:space="preserve">
    <value>All right reserved.</value>
  </data>
  <data name="label_Add" xml:space="preserve">
    <value>Build your collection from your local music files</value>
  </data>
  <data name="label_Contact" xml:space="preserve">
    <value>Contact us:</value>
  </data>
  <data name="lblSongName" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="lblSongSearch" xml:space="preserve">
    <value>Results for "</value>
  </data>
  <data name="Minutes" xml:space="preserve">
    <value>Minutes</value>
  </data>
  <data name="settingLocal" xml:space="preserve">
    <value>Your local music files</value>
  </data>
  <data name="shutdown" xml:space="preserve">
    <value>Shut down timer</value>
  </data>
  <data name="Songs" xml:space="preserve">
    <value>Songs</value>
  </data>
  <data name="txbNewPlaylist" xml:space="preserve">
    <value>Name this playlist</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Check for Updates</value>
  </data>
  <data name="Vietnam" xml:space="preserve">
    <value>Vietnamese</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="lblStatusOff" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="lblStatusOn" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="lblWarning" xml:space="preserve">
    <value>* You must restart your app to apply.</value>
  </data>
  <data name="lbStatus" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="version" xml:space="preserve">
    <value>Version:</value>
  </data>
  <data name="btnDone" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="captionDelete" xml:space="preserve">
    <value>Remove this folder?</value>
  </data>
  <data name="deleteFolder" xml:space="preserve">
    <value>If you remove the "Music" folder from Music, it won't appear in Music anymore, but won't be deleted.</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="lbupdate1" xml:space="preserve">
    <value>Check version</value>
  </data>
  <data name="lbupdate2" xml:space="preserve">
    <value>Downloading...</value>
  </data>
  <data name="lbupdate3" xml:space="preserve">
    <value>Ting Music will automatically install update the next time</value>
  </data>
  <data name="lbupdate4" xml:space="preserve">
    <value>No Update.</value>
  </data>
  <data name="noInternet" xml:space="preserve">
    <value>No internet connection.</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>Search songs</value>
  </data>
  <data name="Add to" xml:space="preserve">
    <value>Add to</value>
  </data>
  <data name="Edit info" xml:space="preserve">
    <value>Edit info</value>
  </data>
  <data name="edit1" xml:space="preserve">
    <value>Edit information successfully!</value>
  </data>
  <data name="edit2" xml:space="preserve">
    <value>Notification</value>
  </data>
  <data name="editerror" xml:space="preserve">
    <value>Edit error! Because this music is playing. You should next music and try again.</value>
  </data>
  <data name="lblInfo" xml:space="preserve">
    <value>Edit info</value>
  </data>
  <data name="play" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="playNext" xml:space="preserve">
    <value>Play next</value>
  </data>
  <data name="Properites" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="question1" xml:space="preserve">
    <value>Do you want to edit information this music?</value>
  </data>
  <data name="question2" xml:space="preserve">
    <value>Quesition</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
</root>